# -*- coding: utf-8 -*-
"""Monetary Policy Rate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J74BedhPAr2Dzg7OXZTftUbqLNqNfYEL

Sanghamitra Basu, Somtochukwu Achi-kanu
/Visualisation
/mpr and fuel price merged
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df_fuel = pd.read_csv('/content/Domestic Average Price of Fuel In Nigeria(1985-2024).csv')
df_fuel.head(12)

df_mpr = pd.read_csv('/content/MonetaryPolicyRate_monthly.csv')
df_mpr.head()

df_mpr = df_mpr.drop(['Unnamed: 0'], axis=1)
df_mpr = df_mpr.drop(['Year'], axis=1)
df_mpr.head()

df_fuel = df_fuel.iloc[60:]
df_fuel.head()

df_fuel.reset_index(drop=True, inplace=True)
df_fuel.head()

df_mpr.head()

df_mpr['Domestic Average Price of fuel in Naira Per Litre'] = df_fuel['Price in Naira Per Litre']
df_mpr.head()

df_mpr.info()

df_mpr.isnull().sum()

rows_with_nulls = df_mpr[df_mpr.isnull().any(axis=1)].index
print(rows_with_nulls)

df_mpr.tail()

df_mpr.dropna(inplace=True)
df_mpr.isnull().sum()

df_mpr.tail()

# Convert 'Mon-YY' column to datetime objects for numerical representation
df_mpr['Mon-YY'] = pd.to_datetime(df_mpr['Mon-YY'], format='%b-%y')
df_mpr['Mon-YY_Ordinal'] = df_mpr['Mon-YY'].apply(lambda x: x.toordinal())
df_mpr.head()

corr_MY_V = df_mpr['Mon-YY_Ordinal'].corr(df_mpr['Value'])
corr_MY_fuel = df_mpr['Mon-YY_Ordinal'].corr(df_mpr['Domestic Average Price of fuel in Naira Per Litre'])
corr_V_fuel = df_mpr['Value'].corr(df_mpr['Domestic Average Price of fuel in Naira Per Litre'])

print(corr_V_fuel)
print(corr_MY_V)
print(corr_MY_fuel)

plt.figure(figsize=(10, 8))


sns.heatmap(df_mpr.corr(), annot=True, cmap='coolwarm', center=0)


plt.title('Heatmap of Features')
plt.show()

"""From the heatmap, we can see that the "Mon-YY" and "Mon-YY_Ordinal" features have the highest positive contributions, while the "Value" feature has a moderate negative contribution. The "Domestic Average Price of fuel in Naira Per Litre" feature appears to have a moderate positive contribution."""

df_mpr.set_index('Mon-YY', inplace=True)
df_mpr.head()

plt.plot(df_mpr.index, df_mpr['Value'], color = 'blue')
plt.plot(df_mpr.index, df_mpr['Domestic Average Price of fuel in Naira Per Litre'], color = 'red')
plt.legend(['Value', 'Domestic Average Price of fuel in Naira Per Litre'])
plt.title('Value over Time')
plt.xlabel('Year')
plt.ylabel('Value')
plt.show()

"""Over the years, the two variables have shown diverging trends. While the "Value" variable has remained relatively stable, fluctuating between 0 and 100, the "Domestic Average Price of fuel in Naira Per Litre" has shown a significant increase, particularly since around 2020 and a significant increase in 2024."""

plt.plot(df_mpr.index, df_mpr['Value'], color = 'blue')
plt.show()

plt.plot(df_mpr.index, df_mpr['Domestic Average Price of fuel in Naira Per Litre'], color = 'red')
plt.show()

from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
df_mpr['Value_normalized'] = scaler.fit_transform(df_mpr[['Value']])
df_mpr['fuel_normalized'] = scaler.fit_transform(df_mpr[['Domestic Average Price of fuel in Naira Per Litre']])

plt.plot(df_mpr.index, df_mpr['Value_normalized'], color = 'blue')
plt.plot(df_mpr.index, df_mpr['fuel_normalized'], color = 'red')
plt.legend(['Value', 'Domestic Average Price of fuel in Naira Per Litre'])
plt.title('Value over Time')
plt.xlabel('Year')
plt.ylabel('Value')
plt.show()

plt.figure(figsize=(10, 6))


plt.hist(df_mpr['Value_normalized'], bins=30, alpha=0.5, label='mpr', color='blue')


plt.hist(df_mpr['fuel_normalized'], bins=30, alpha=0.5, label='Feature2', color='green')

# Add labels and title
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.title('Comparative Histogram')
plt.legend()

# Show plot
plt.show()

import plotly.graph_objects as go

x = np.arange(len(df_mpr))
width = 0.9


# Create the Plotly figure
fig = go.Figure()

#First bar trace
fig.add_trace(go.Bar(
    x=x,
    y=df_mpr['Value_normalized'],
    name='Value_normalized',
    marker_color='#1f77b4',
    offset=-width/2
))

#second bar trace
fig.add_trace(go.Bar(
    x=x,
    y=df_mpr['fuel_normalized'],
    name='fuel_normalized',
    marker_color='#ff7f0e',
    offset=width/2
))

#the layout update
fig.update_layout(
    barmode='group',
    bargap=0.1,
    xaxis_title='Value',
    yaxis_title='Frequency',
    title='Comparative Bar Plot',
    width=1200,
    height=400
)

# Display the interactive plot
fig.show()

""" the changes in the domestic average price of fuel per litre are much more pronounced compared to the changes in the "Value" variable(mpr). The difference in patterns between the two variables imply that the underlying factors driving the changes in fuel prices may not be directly correlated with the changes in the "Value" variable(mpr)."""

fig = go.Figure()

# Scatterplot
fig.add_trace(go.Scatter(
    x=df_mpr['Value_normalized'],
    y=df_mpr['fuel_normalized'],
    mode='markers',
    marker=dict(
        color='red'
    )
))

#Layout
fig.update_layout(
    xaxis_title='Value_normalized',
    yaxis_title='fuel_normalized',
    title='Relationship between the Normalized Values',
    width=1200,
    height=600
)

# Display the interactive plot
fig.show()

"""The points are scattered across the plot, indicating that changes in the "Value_normalized" variable are not directly proportional to changes in the "fuel_normalized" variable. mpr has no direct influence on monetary policy rate."""

correlation = df_mpr[['Value_normalized','fuel_normalized']].corr()

#Heatmap visualization
sns.heatmap(correlation, annot=True)
plt.title('Correlation Heatmap')
plt.show()

"""This heatmap shows that the domestic price of fuel has no correlation or influence in the rise in the cost of fuel."""

from statsmodels.tsa.stattools import acf, pacf


x = df_mpr['Value_normalized']
y = df_mpr['fuel_normalized']

# Calculate the ACF and PACF
x_acf = acf(x, nlags=20)
x_pacf = pacf(x, nlags=20, method='ywm')
y_acf = acf(y, nlags=20)
y_pacf = pacf(y, nlags=20, method='ywm')

# Generate the ACF and PACF plots using Plotly
fig = go.Figure(layout=go.Layout(title='Autocorrelation and Partial Autocorrelation Plots'))

# ACF for x
fig.add_trace(go.Scatter(x=np.arange(len(x_acf)), y=x_acf, mode='lines+markers', name='ACF for x (Value_normalized)'))

# PACF for x
fig.add_trace(go.Scatter(x=np.arange(len(x_pacf)), y=x_pacf, mode='lines+markers', name='PACF for x (Value_normalized)'))

# ACF for y
fig.add_trace(go.Scatter(x=np.arange(len(y_acf)), y=y_acf, mode='lines+markers', name='ACF for y (fuel_normalized)'))

# PACF for y
fig.add_trace(go.Scatter(x=np.arange(len(y_pacf)), y=y_pacf, mode='lines+markers', name='PACF for y (fuel_normalized)'))

fig.update_layout(
    xaxis_title='Lag',
    yaxis_title='Correlation',
    legend_title='Plots',
    font=dict(
        family="Courier New, monospace",
        size=14,
        color="RebeccaPurple"
    )
)

fig.show()

"""The differences in the autocorrelation and partial autocorrelation patterns between the two variables suggest distinct temporal structures."""